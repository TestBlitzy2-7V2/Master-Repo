# =============================================================================
# ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# Security-hardened Express.js Application Configuration
# Copy this file to .env and customize values for your development environment
#
# This template provides configurable parameters for:
# - TLS/SSL certificate management
# - Security middleware configuration
# - Rate limiting and DoS protection
# - CORS policy management
# - Development environment settings
# =============================================================================

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# HTTP Server Configuration
# Default HTTP port for development (maintains backward compatibility)
HTTP_PORT=3000

# HTTPS Server Configuration
# Default HTTPS port for secure development communications
HTTPS_PORT=3443

# Server Host Binding
# localhost binding for development environment isolation
HOST=localhost

# Node.js Environment
# Set to 'development' for enhanced logging and debugging
NODE_ENV=development

# =============================================================================
# TLS/SSL CERTIFICATE CONFIGURATION
# =============================================================================

# Certificate Directory Path
# Directory containing TLS certificate files
CERT_DIR=certificates

# TLS Private Key Path
# Path to private key file for HTTPS server
TLS_KEY_PATH=certificates/key.pem

# TLS Certificate Path
# Path to certificate file for HTTPS server
TLS_CERT_PATH=certificates/cert.pem

# TLS Configuration
# Minimum TLS version for secure communications
TLS_MIN_VERSION=TLSv1.2

# Certificate Validity Period (for self-signed certificate generation)
# Number of days the certificate should be valid
CERT_VALIDITY_DAYS=365

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

# Rate Limiting Window (in milliseconds)
# Default: 15 minutes (900000 ms) for request quota reset
RATE_LIMIT_WINDOW_MS=900000

# Rate Limiting Maximum Requests
# Maximum number of requests per IP within the time window
RATE_LIMIT_MAX_REQUESTS=100

# Rate Limiting Skip Successful Requests
# Whether to count successful requests towards the limit
RATE_LIMIT_SKIP_SUCCESSFUL=false

# Rate Limiting Headers
# Include rate limit information in response headers
RATE_LIMIT_STANDARD_HEADERS=true

# Rate Limiting Legacy Headers
# Include legacy X-RateLimit-* headers for backward compatibility
RATE_LIMIT_LEGACY_HEADERS=false

# Rate Limiting Error Message
# Custom message returned when rate limit is exceeded
RATE_LIMIT_MESSAGE=Too many requests from this IP, please try again later.

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# CORS Allowed Origins
# Comma-separated list of allowed origins for cross-origin requests
# Use '*' for development, specific domains for production
CORS_ALLOWED_ORIGINS=*

# CORS Allowed Methods
# HTTP methods allowed for cross-origin requests
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# CORS Allowed Headers
# Headers allowed in cross-origin requests
CORS_ALLOWED_HEADERS=Origin,X-Requested-With,Content-Type,Accept,Authorization

# CORS Credentials Support
# Whether to include credentials in cross-origin requests
CORS_CREDENTIALS=false

# CORS Preflight Max Age
# How long browsers cache preflight responses (in seconds)
CORS_MAX_AGE=86400

# CORS Expose Headers
# Headers exposed to the client in cross-origin responses
CORS_EXPOSE_HEADERS=X-RateLimit-Limit,X-RateLimit-Remaining,X-RateLimit-Reset

# =============================================================================
# SECURITY HEADERS CONFIGURATION (HELMET)
# =============================================================================

# Content Security Policy
# Enable/disable Content-Security-Policy header
CSP_ENABLED=true

# CSP Default Source Directive
# Default source for all content types
CSP_DEFAULT_SRC='self'

# CSP Script Source Directive
# Allowed sources for JavaScript
CSP_SCRIPT_SRC='self'

# CSP Style Source Directive
# Allowed sources for CSS
CSP_STYLE_SRC='self' 'unsafe-inline'

# CSP Image Source Directive
# Allowed sources for images
CSP_IMG_SRC='self' data: https:

# Cross-Origin Opener Policy
# Controls cross-origin window interactions
COOP_POLICY=same-origin

# Cross-Origin Resource Policy
# Controls cross-origin resource sharing
CORP_POLICY=same-origin

# HTTP Strict Transport Security (HSTS)
# Enable HSTS for HTTPS connections only
HSTS_ENABLED=true

# HSTS Max Age (in seconds)
# How long browsers remember HTTPS requirement
HSTS_MAX_AGE=31536000

# HSTS Include Subdomains
# Apply HSTS to all subdomains
HSTS_INCLUDE_SUBDOMAINS=true

# HSTS Preload
# Enable HSTS preload list inclusion
HSTS_PRELOAD=false

# X-Frame-Options
# Protection against clickjacking attacks
X_FRAME_OPTIONS=SAMEORIGIN

# X-Content-Type-Options
# Prevent MIME type sniffing
X_CONTENT_TYPE_OPTIONS=nosniff

# X-DNS-Prefetch-Control
# Control DNS prefetching behavior
X_DNS_PREFETCH_CONTROL=off

# Referrer Policy
# Control referrer information sent with requests
REFERRER_POLICY=no-referrer

# =============================================================================
# INPUT VALIDATION CONFIGURATION
# =============================================================================

# Input Validation Strict Mode
# Enable strict validation for all inputs
VALIDATION_STRICT_MODE=true

# HTML Sanitization
# Enable HTML escape sanitization to prevent XSS
HTML_SANITIZATION_ENABLED=true

# Maximum Request Body Size
# Maximum size for request bodies (in bytes)
MAX_REQUEST_BODY_SIZE=1048576

# Maximum URL Length
# Maximum length for request URLs
MAX_URL_LENGTH=2048

# Maximum Parameter Count
# Maximum number of parameters per request
MAX_PARAM_COUNT=100

# =============================================================================
# LOGGING AND MONITORING CONFIGURATION
# =============================================================================

# Security Logging Level
# Logging level for security events (error, warn, info, debug)
SECURITY_LOG_LEVEL=info

# Verbose Security Logging
# Enable detailed logging for security middleware
VERBOSE_SECURITY_LOGGING=true

# Request Logging
# Log all incoming requests for monitoring
REQUEST_LOGGING_ENABLED=true

# Error Logging
# Log application errors and security violations
ERROR_LOGGING_ENABLED=true

# Rate Limit Violation Logging
# Log when rate limits are exceeded
RATE_LIMIT_VIOLATION_LOGGING=true

# CORS Violation Logging
# Log when CORS policies are violated
CORS_VIOLATION_LOGGING=true

# =============================================================================
# DEVELOPMENT ENVIRONMENT SPECIFIC SETTINGS
# =============================================================================

# Development Mode Security Relaxation
# Slightly relaxed security settings for development
DEVELOPMENT_MODE=true

# Self-Signed Certificate Warnings
# Accept self-signed certificates in development
ALLOW_SELF_SIGNED_CERTS=true

# Certificate Regeneration Interval (in days)
# How often to regenerate development certificates
CERT_REGENERATION_INTERVAL=30

# Development CORS Policy
# More permissive CORS settings for development
DEVELOPMENT_CORS_RELAXED=true

# Security Header Debug Mode
# Include additional debug information in security headers
SECURITY_HEADERS_DEBUG=false

# Middleware Performance Monitoring
# Monitor middleware execution time for optimization
MIDDLEWARE_PERFORMANCE_MONITORING=false

# =============================================================================
# ADVANCED SECURITY CONFIGURATION
# =============================================================================

# Request Timeout (in milliseconds)
# Maximum time to wait for request completion
REQUEST_TIMEOUT=30000

# Keep-Alive Timeout (in milliseconds)
# Keep-alive timeout for HTTP connections
KEEP_ALIVE_TIMEOUT=5000

# Headers Timeout (in milliseconds)
# Timeout for receiving complete headers
HEADERS_TIMEOUT=60000

# Maximum Header Size (in bytes)
# Maximum size for HTTP headers
MAX_HEADER_SIZE=8192

# Trust Proxy Settings
# Trust proxy headers when behind reverse proxy
TRUST_PROXY=false

# Cookie Security Settings
# Secure cookie configuration for session management
COOKIE_SECURE=true
COOKIE_HTTP_ONLY=true
COOKIE_SAME_SITE=strict

# =============================================================================
# CERTIFICATE GENERATION CONFIGURATION
# =============================================================================

# Certificate Subject Information
# Used for self-signed certificate generation
CERT_COUNTRY=US
CERT_STATE=Development
CERT_LOCALITY=Local
CERT_ORGANIZATION=Development Team
CERT_ORGANIZATIONAL_UNIT=Security Testing
CERT_COMMON_NAME=localhost

# Certificate Key Size
# RSA key size for certificate generation
CERT_KEY_SIZE=2048

# Certificate Signature Algorithm
# Signature algorithm for certificate generation
CERT_SIGNATURE_ALGORITHM=sha256

# =============================================================================
# PRODUCTION READINESS INDICATORS
# =============================================================================

# These settings should be reviewed and updated for production deployment

# Production TLS Certificate Path
# Path to CA-signed certificate for production
# PRODUCTION_TLS_CERT_PATH=/path/to/production/cert.pem

# Production TLS Key Path
# Path to private key for production certificate
# PRODUCTION_TLS_KEY_PATH=/path/to/production/key.pem

# Production CORS Origins
# Specific allowed origins for production environment
# PRODUCTION_CORS_ORIGINS=https://yourdomain.com,https://api.yourdomain.com

# Production Rate Limiting
# Stricter rate limiting for production
# PRODUCTION_RATE_LIMIT_MAX_REQUESTS=50
# PRODUCTION_RATE_LIMIT_WINDOW_MS=600000

# Production Security Headers
# Enhanced security headers for production
# PRODUCTION_HSTS_PRELOAD=true
# PRODUCTION_CSP_REPORT_URI=https://yourdomain.com/csp-report

# =============================================================================
# CONFIGURATION VALIDATION
# =============================================================================

# Environment Configuration Validation
# Validate environment variables on startup
CONFIG_VALIDATION_ENABLED=true

# Required Configuration Check
# Ensure all required environment variables are set
REQUIRED_CONFIG_CHECK=true

# Configuration Schema Version
# Version of configuration schema for compatibility
CONFIG_SCHEMA_VERSION=1.0.0